string = empty["caml_new_string"]
caml_wrap_exception = empty["caml_wrap_exception"]
global_data = empty["caml_get_global_data"]()
cst_Sys_Break = string("Sys.Break")
ocaml_version = string("4.06.0")
Not_found = global_data["Not_found"]
match = empty["caml_sys_get_argv"](0)
argv = match[2]
executable_name = match[1]
match__0 = empty["caml_sys_get_config"](0)
os_type = match__0[1]
backend_type = empty["caml_sys_const_backend_type"](0)
unix = empty["caml_sys_const_ostype_unix"](0)
win32 = empty["caml_sys_const_ostype_win32"](0)
cygwin = empty["caml_sys_const_ostype_cygwin"](0)
max_array_length = empty["caml_sys_const_max_wosize"](0)
max_string_length = int(int(4 * max_array_length) + -1)
big_endian = 0
word_size = 32
int_size = 32


def getenv_opt(s):
    try:
        e = [0, empty["caml_sys_getenv"](s)]
        return e
    except:
        f = caml_wrap_exception(f)
        if f is Not_found:
            return 0
        raise (empty["caml_wrap_thrown_exception_reraise"](f))


interactive = [0, 0]


def set_signal(sig_num, sig_beh):
    return 0


Break = [248, cst_Sys_Break, empty["caml_fresh_oo_id"](0)]
sigabrt = -1
sigalrm = -2
sigfpe = -3
sighup = -4
sigill = -5
sigint = -6
sigkill = -7
sigpipe = -8
sigquit = -9
sigsegv = -10
sigterm = -11
sigusr1 = -12
sigusr2 = -13
sigchld = -14
sigcont = -15
sigstop = -16
sigtstp = -17
sigttin = -18
sigttou = -19
sigvtalrm = -20
sigprof = -21
sigbus = -22
sigpoll = -23
sigsys = -24
sigtrap = -25
sigurg = -26
sigxcpu = -27
sigxfsz = -28


def catch_break(on):
    def function_expression_10(param):
        raise (empty["caml_wrap_thrown_exception"](Break))

    return (
        set_signal(sigint, [0, function_expression_10]) if on else set_signal(sigint, 0)
    )


def b(d):
    return empty["caml_ml_runtime_warnings_enabled"](d)


def function_expression_11(c):
    return empty["caml_ml_enable_runtime_warnings"](c)


Sys = [
    0,
    argv,
    executable_name,
    getenv_opt,
    interactive,
    os_type,
    backend_type,
    unix,
    win32,
    cygwin,
    word_size,
    int_size,
    big_endian,
    max_string_length,
    max_array_length,
    set_signal,
    sigabrt,
    sigalrm,
    sigfpe,
    sighup,
    sigill,
    sigint,
    sigkill,
    sigpipe,
    sigquit,
    sigsegv,
    sigterm,
    sigusr1,
    sigusr2,
    sigchld,
    sigcont,
    sigstop,
    sigtstp,
    sigttin,
    sigttou,
    sigvtalrm,
    sigprof,
    sigbus,
    sigpoll,
    sigsys,
    sigtrap,
    sigurg,
    sigxcpu,
    sigxfsz,
    Break,
    catch_break,
    ocaml_version,
    function_expression_11,
    b,
]
empty["caml_register_global"](3, Sys, "Sys")
