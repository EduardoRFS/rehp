caml_marshal_data_size = empty["caml_marshal_data_size"]
caml_ml_bytes_length = empty["caml_ml_bytes_length"]
string = empty["caml_new_string"]


def call1(f, a0):
    return f(a0) if arity_test is 1 else empty["caml_call_gen"](f, [a0])


global_data = empty["caml_get_global_data"]()
cst_Marshal_from_bytes = string("Marshal.from_bytes")
cst_Marshal_from_bytes__0 = string("Marshal.from_bytes")
cst_Marshal_data_size = string("Marshal.data_size")
cst_Marshal_to_buffer_substring_out_of_bounds = string(
    "Marshal.to_buffer: substring out of bounds"
)
Bytes = global_data["Bytes"]
Pervasives = global_data["Pervasives"]


def to_buffer(buff, ofs, len, v, flags):
    if 0 <= ofs:
        if 0 <= len:
            if not (int(caml_ml_bytes_length(buff) - len) < ofs):
                return empty["caml_output_value_to_buffer"](buff, ofs, len, v, flags)
    return call1(Pervasives[1], cst_Marshal_to_buffer_substring_out_of_bounds)


header_size = 20


def data_size(buff, ofs):
    if 0 <= ofs:
        if not (int(caml_ml_bytes_length(buff) - 20) < ofs):
            return caml_marshal_data_size(buff, ofs)
    return call1(Pervasives[1], cst_Marshal_data_size)


def total_size(buff, ofs):
    return int(20 + data_size(buff, ofs))


def from_bytes(buff, ofs):
    if 0 <= ofs:
        if not (int(caml_ml_bytes_length(buff) - 20) < ofs):
            len = caml_marshal_data_size(buff, ofs)
            return (
                call1(Pervasives[1], cst_Marshal_from_bytes__0)
                if int(caml_ml_bytes_length(buff) - int(20 + len)) < ofs
                else empty["caml_input_value_from_string"](buff, ofs)
            )
    return call1(Pervasives[1], cst_Marshal_from_bytes)


def from_string(buff, ofs):
    return from_bytes(call1(Bytes[43], buff), ofs)


def b(f):
    return empty["caml_input_value"](f)


def function_expression_12(e, d, c):
    return empty["caml_output_value"](e, d, c)


Marshal = [
    0,
    function_expression_12,
    to_buffer,
    b,
    from_bytes,
    from_string,
    header_size,
    data_size,
    total_size,
]
empty["caml_register_global"](6, Marshal, "Marshal")
