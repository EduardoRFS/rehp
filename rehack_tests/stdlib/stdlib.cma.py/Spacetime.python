string = empty["caml_new_string"]
caml_spacetime_enabled = empty["caml_spacetime_enabled"]
caml_spacetime_only_works_for_native_code = empty[
    "caml_spacetime_only_works_for_native_code"
]


def call1(f, a0):
    return f(a0) if arity_test is 1 else empty["caml_call_gen"](f, [a0])


global_data = empty["caml_get_global_data"]()
cst_Series_is_closed__0 = string("Series is closed")
cst_Series_is_closed = string("Series is closed")
Pervasives = global_data["Pervasives"]
enabled = caml_spacetime_enabled(0)


def if_spacetime_enabled(f):
    return call1(f, 0) if enabled else 0


def create(path):
    if caml_spacetime_enabled(0):
        channel = call1(Pervasives[48], path)
        t = [0, channel, 0]
        caml_spacetime_only_works_for_native_code(t[1])
        return t
    return [0, Pervasives[27], 1]


def save_event(time, t, event_name):
    def function_expression_240(param):
        return caml_spacetime_only_works_for_native_code(time, t[1], event_name)

    return if_spacetime_enabled(function_expression_240)


def save_and_close(time, t):
    def function_expression_241(param):
        if t[2]:
            call1(Pervasives[2], cst_Series_is_closed)
        caml_spacetime_only_works_for_native_code(time, t[1])
        call1(Pervasives[64], t[1])
        t[2] = 1
        return 0

    return if_spacetime_enabled(function_expression_241)


Series = [0, create, save_event, save_and_close]


def take(time, param):
    channel = param[1]
    closed = param[2]

    def function_expression_242(param):
        if closed:
            call1(Pervasives[2], cst_Series_is_closed__0)
        empty["caml_gc_minor"](0)
        return caml_spacetime_only_works_for_native_code(time, channel)

    return if_spacetime_enabled(function_expression_242)


Snapshot = [0, take]


def save_event_for_automatic_snapshots(event_name):
    def function_expression_243(param):
        return caml_spacetime_only_works_for_native_code(event_name)

    return if_spacetime_enabled(function_expression_243)


Spacetime = [0, enabled, Series, Snapshot, save_event_for_automatic_snapshots]
empty["caml_register_global"](3, Spacetime, "Spacetime")
